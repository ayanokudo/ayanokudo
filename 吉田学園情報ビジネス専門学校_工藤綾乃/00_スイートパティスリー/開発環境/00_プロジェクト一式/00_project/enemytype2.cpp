//=============================================================================
//
// 敵の処理 [enemytype2.cpp]
// Author : AYANO KUDO
//
//=============================================================================
#include "enemytype2.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define FRICTION_FACTOR (0.07f)// 摩擦係数

//=============================================================================
// [CEnemytype2] コンストラクタ
//=============================================================================
CEnemytype2::CEnemytype2()
{
    SetMove(D3DXVECTOR3(2.0f, 0.2f, 0.0f));

}

//=============================================================================
// [~CEnemytype2] デストラクタ
//=============================================================================
CEnemytype2::~CEnemytype2()
{

}

//=============================================================================
// [Create] オブジェクトの生成
//=============================================================================
CEnemytype2 *CEnemytype2::Create(D3DXVECTOR3 pos)
{
    // 変数宣言
    CEnemytype2 *pCEnemytype2 = NULL;
    if (pCEnemytype2==NULL)
    {
        // メモリの確保
        pCEnemytype2 = new CEnemytype2;
        pCEnemytype2->Init();
    }
    return pCEnemytype2;
}

//=============================================================================
// [Init] 初期化処理
//=============================================================================
HRESULT CEnemytype2::Init(void)
{

    return S_OK;
}

//=============================================================================
// [Uninit] 終了処理
//=============================================================================
void CEnemytype2::Uninit(void)
{
    CEnemy::Uninit();
}

//=============================================================================
// [~CEnemy] 更新処理
//=============================================================================
void CEnemytype2::Update(void)
{
    // 慣性をつける
    D3DXVECTOR3 move = CEnemy::GetMove();
    move.x *= FRICTION_FACTOR;
    CEnemy::SetMove(move);

    CEnemy::Update();
}
//=============================================================================
// [Draw] 描画処理
//=============================================================================
void CEnemytype2::Draw(void)
{
    CEnemy::Draw();
}
